{"version":3,"sources":["components/Filter/Filter.js","assets/libri1.jpg","components/Listings/Listings.js","screens/Home.js","actions/types.js","actions/auth.js","assets/bookIllustation.svg","screens/SignIn.js","screens/SignUp.js","screens/ResetPassword.js","screens/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","components/Nav/NavBM.js","hocs/Layout.js","App.js","index.js"],"names":["Filter","useState","isShkollor","setIsShkollor","borderRight","overflow","pos","top","left","flexDirection","alignItems","h","w","pt","fontSize","placeholder","mt","map","e","value","display","justifyContent","size","onChange","pointerEvents","children","color","type","colorScheme","mb","Listings","flexDir","borderBottom","fontWeight","bg","wrap","borderWidth","borderRadius","my","src","libri","alt","borderTopRadius","cursor","m","as","isTruncated","Home","templateColumns","gap","colSpan","SIGNUP_SUCCESS","SIGNUP_FAIL","SIGNIN_SUCCESS","SIGNIN_FAIL","LOGOUT","AUTHENTICATED_FAIL","AUTHENTICATED_SUCCESS","USER_LOADED_SUCCESS","USER_LOADED_FAIL","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","res","payload","data","connect","state","isAuthenticated","auth","signin","email","password","body","JSON","stringify","post","to","gridColumn","boxSize","bookIllustation","minHeight","width","align","px","maxWidth","textAlign","boxShadow","p","initialValues","onSubmit","console","log","validate","values","method","name","field","form","isInvalid","errors","touched","isRequired","id","alignSelf","variant","mx","signup","re_password","useDisclosure","isOpen","onOpen","onClose","accountCreated","setAccountCreated","length","onClick","scrollBehavior","mr","reset_password","props","requestSent","setRequestSent","toast","useToast","formData","setFormData","preventDefault","title","description","status","duration","isClosable","setTimeout","target","reset_password_confirm","uid","token","new_password","re_new_password","match","params","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","NavBM","zIndex","justify","Search","checkAuthenticated","window","code","useEffect","fetchData","App","exact","path","component","SignIn","SignUp","ResetPassword","ResetPasswordConfirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8679ae00.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button,\r\n    FormControl,\r\n    FormLabel,\r\n    Select,\r\n    Flex,\r\n    Switch,\r\n    Input, \r\n    InputGroup,\r\n    InputLeftElement,\r\n    Box\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\n\r\nconst Filter = () => {\r\n\r\n    const [isShkollor, setIsShkollor] = useState(false);\r\n\r\n    const rrethet = [\"Berat\", \"Diber\", \"Durres\", \"Elbasan\", \"Fier\", \"Gjirokaster\", \"Korce\", \"Kukes\", \"Lezhe\", \"Shkoder\", \"Tirane\", \"Vlore\"];\r\n    const universitetet = [\"Universiteti i Tiranes\", \"Universiteti Politeknik i Tiranes\"];\r\n\r\n    return (\r\n        <Box borderRight=\"1px solid #E0E0E0\" overflow=\"hidden\" pos=\"sticky\" top=\"20\" left=\"0\">\r\n            <Flex flexDirection=\"column\" alignItems=\"center\" h=\"calc(100vh - 80px - 88px);\">\r\n                    <FormControl w=\"250px\" pt={6}>\r\n                        <FormLabel fontSize=\"xl\" >Qyteti</FormLabel>\r\n                        <Select placeholder=\"Gjithë Shqipëria\" mt=\"8px\">\r\n                            {rrethet.map(e => (<option value={e} key={e}>{e}</option>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl display=\"flex\" w=\"250px\" pt={6} justifyContent=\"space-between\">\r\n                        <FormLabel fontSize=\"xl\">Shkollor</FormLabel>\r\n                        <Switch size=\"lg\" onChange={() => setIsShkollor(isShkollor => !isShkollor)}/>\r\n                    </FormControl>\r\n                    {isShkollor && <Box>\r\n                        <FormControl w=\"250px\" pt={6}>\r\n                            <FormLabel fontSize=\"xl\" >Universiteti</FormLabel>\r\n                            <Select placeholder=\"Gjithë Universitetet\" mt=\"8px\">\r\n                                {universitetet.map(e => (<option value={e} key={e}>{e}</option>))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl w=\"250px\" pt={6}>\r\n                            <FormLabel fontSize=\"xl\" >Viti</FormLabel>\r\n                            <Select placeholder=\"Gjithë Vitet\" mt=\"8px\">\r\n                                <option value={1} key={1}>1</option>\r\n                                <option value={2} key={2}>2</option>\r\n                                <option value={3} key={3}>3</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    }\r\n                    <FormControl w=\"250px\" pt={6}>\r\n                        <FormLabel fontSize=\"xl\" >Cmimi</FormLabel>\r\n                        <Flex display=\"flex\" justifyContent=\"space-between\">\r\n                            <InputGroup w=\"118px\">\r\n                                <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children=\"ALL\"\r\n                                color=\"gray.300\"\r\n                                />\r\n                                <Input type=\"phone\" placeholder=\"MIN\" />\r\n                            </InputGroup>\r\n                            <InputGroup w=\"118px\">\r\n                                <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children=\"ALL\"\r\n                                color=\"gray.300\"\r\n                                />\r\n                                <Input type=\"phone\" placeholder=\"MAX\" />\r\n                            </InputGroup>\r\n                        </Flex>\r\n                    </FormControl>\r\n            </Flex>\r\n            <Flex justifyContent=\"center\">\r\n                <Button colorScheme=\"blue\" w=\"250px\" mt={6} mb={6}>Filtro</Button>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","export default __webpack_public_path__ + \"static/media/libri1.cb86d75b.jpg\";","import React from 'react';\r\nimport { Box,\r\n    Select,\r\n    Flex,\r\n    Text,\r\n    Image\r\n} from \"@chakra-ui/react\";\r\n\r\nimport libri from '../../assets/libri1.jpg';\r\n\r\nconst Listings = () => {\r\n\r\n    const librat = [1,2,3,4,5,6,7,8,9,10,11];\r\n\r\n    return (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" w=\"full\" flexDir=\"column\">\r\n            <Flex w=\"80%\" justifyContent=\"space-between\" alignItems=\"center\" h={16} borderBottom=\"1px solid #D4D4D4\">\r\n                <Text fontSize=\"2xl\" fontWeight=\"500\">11 Libra</Text>\r\n                <Flex alignItems=\"center\">\r\n                    <Text fontSize=\"lg\" fontWeight=\"400\" color=\"gray.500\" w=\"150px\">\r\n                        Listo sipas:\r\n                    </Text>\r\n                    <Select placeholder=\"Dates: Me te rejat\" bg=\"white\">\r\n                        <option value={2} key={2}>Cmimit: Me te lirat</option>\r\n                    </Select>\r\n                </Flex>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-around\" wrap=\"wrap\" w=\"90%\">\r\n                {librat.map(e => <Box borderWidth=\"1px\" borderRadius=\"lg\" w=\"300px\" h=\"500px\" bg=\"white\" my=\"5\" key={e}>\r\n                    <Image src={libri} alt={libri} borderTopRadius=\"lg\" cursor=\"pointer\"/>\r\n                    <Box m=\"6\" cursor=\"pointer\">\r\n                        <Box fontWeight=\"semibold\" as=\"h4\" isTruncated>\r\n                            <Text fontSize=\"xl\" >Matematika 1</Text>\r\n                        </Box>\r\n                        <Box>\r\n                            <Text fontSize=\"xl\">ALL 1500</Text>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>)}\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Listings\r\n","import React from 'react';\r\nimport Filter from '../components/Filter/Filter';\r\nimport Listings from '../components/Listings/Listings';\r\nimport { Grid, GridItem } from \"@chakra-ui/react\"\r\n\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(8, 1fr)\" gap={0}>\r\n                <GridItem colSpan={2}>\r\n                    <Filter/>\r\n                </GridItem>\r\n                <GridItem colSpan={6} bg=\"#FBFBFB\">\r\n                    <Listings/>\r\n                </GridItem>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\r\nexport const SIGNIN_FAIL = 'SIGNIN_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\r\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';","import axios from 'axios';\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    SIGNIN_SUCCESS,\r\n    SIGNIN_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    LOGOUT,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS\r\n} from './types';\r\n\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n\r\n    if (typeof window == 'undefined') {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n    \r\n        try {\r\n            const res = await axios.post(`http://localhost:8000/auth/jwt/verify/`, body, config);\r\n    \r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`http://localhost:8000/auth/users/me/`, config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signin = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = ({ name, email, password, re_password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password }); \r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token }); \r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email }); \r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password }); \r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bookIllustation.55cfc3c9.svg\";","import React from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { signin } from '../actions/auth';\r\n\r\nimport {\r\n    Formik,\r\n    Field,\r\n    Form\r\n  } from \"formik\";\r\n\r\nimport { Grid,\r\n    Image,\r\n    Heading,\r\n    Button,\r\n    Input,\r\n    Flex,\r\n    FormControl,\r\n    Box,\r\n    FormLabel,\r\n    Divider,\r\n    Text,\r\n    FormErrorMessage\r\n} from \"@chakra-ui/react\";\r\nimport bookIllustation from \"../assets/bookIllustation.svg\";\r\n\r\nconst SignIn = ({signin, isAuthenticated}) => {\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n\r\n    return (\r\n        <Grid templateColumns=\"repeat(7, 1fr)\" h=\"calc(100vh - 80px)\" >\r\n            <Flex gridColumn=\"span 3\" bg=\"#263772\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Image boxSize=\"450px\" src={bookIllustation} alt=\"bookIllustation\"/>\r\n            </Flex>\r\n            <Flex gridColumn=\"span 4\" bg=\"#FBFBFB\">\r\n                <Flex minHeight='calc(100vh - 80px)' width='full' align='center' justifyContent='center'>\r\n                    <Box \r\n                        borderWidth={1}\r\n                        px={4}\r\n                        width='full'\r\n                        maxWidth='500px'\r\n                        borderRadius={4}\r\n                        textAlign='center'\r\n                        boxShadow='md'\r\n                        bg=\"white\"\r\n                    >\r\n                        <Box p={4}>\r\n                            <Formik \r\n                                initialValues={{ email: '', password: '' }}\r\n                                onSubmit={e => {console.log(e); \r\n                                    const { email, password } = e;\r\n\r\n                                    signin(email, password);\r\n                                }}\r\n                                validate={values => {\r\n                                    const errors = {};\r\n\r\n                                    return errors;\r\n                                }}\r\n                                >\r\n                                {() => (\r\n                                    <Form method=\"POST\">\r\n                                        <Flex my={8} textAlign='left' flexDir=\"column\">\r\n                                            <Heading mb={8} fontSize={40} fontWeight=\"500\">Identifikohu</Heading>\r\n\r\n                                            <Field name=\"email\">\r\n                                                {({field, form}) => (\r\n                                                    <FormControl mt={4} isInvalid={form.errors.email && form.touched.email} isRequired>\r\n                                                        <FormLabel>Email</FormLabel>\r\n                                                        <Input {...field} id=\"email\" type='email' placeholder='Vendosni adresen tuaj te emailit' />\r\n                                                        <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                                                    </FormControl>\r\n                                                )}\r\n                                            </Field>\r\n\r\n                                            <Field name=\"password\">\r\n                                                {({field, form}) => (\r\n                                                    <FormControl mt={4} isInvalid={form.errors.password && form.touched.password} isRequired>\r\n                                                        <FormLabel>Fjalkalimin</FormLabel>\r\n                                                        <Input {...field} id=\"password\" type='password' placeholder='Vendosni fjalkalimin tuaj' />\r\n                                                        <FormErrorMessage>{form.errors.password}</FormErrorMessage>\r\n                                                    </FormControl>\r\n                                                )}\r\n                                            </Field>\r\n\r\n                                            <Box alignSelf=\"flex-end\" w=\"inherit\">\r\n                                                <Link to=\"/resetpassword\">\r\n                                                    <Button my={6} colorScheme=\"blue\" variant=\"link\">Keni harruar fjalkalimin?</Button>\r\n                                                </Link>\r\n                                            </Box>\r\n                                            <Button type='submit' colorScheme=\"blue\" variant=\"solid\" width='full' >Identifikohu</Button>\r\n                                            <Flex align=\"center\">\r\n                                                <Divider my={8}/>\r\n                                                <Text fontSize={16} color=\"gray.400\" mx={6}>ose</Text>\r\n                                                <Divider my={8}/>\r\n                                            </Flex>\r\n                                            <Link to=\"/signup\">\r\n                                                <Button colorScheme=\"blue\" variant=\"outline\" width='full' >Regjistrohu</Button>\r\n                                            </Link>\r\n                                        </Flex>\r\n                                        {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                                        <pre>{JSON.stringify(errors, null, 2)}</pre> */}\r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        </Box>\r\n                    </Box>\r\n                </Flex>\r\n            </Flex>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signin })(SignIn);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\nimport {\r\n    Formik,\r\n    Field,\r\n    Form\r\n  } from \"formik\";\r\n\r\nimport { Grid,\r\n    Image,\r\n    Heading,\r\n    Button,\r\n    Input,\r\n    Flex,\r\n    FormControl,\r\n    Box,\r\n    FormLabel,\r\n    Divider,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalCloseButton,\r\n    ModalBody,\r\n    ModalFooter,\r\n    useDisclosure,\r\n    Text,\r\n    FormErrorMessage\r\n} from \"@chakra-ui/react\";\r\nimport bookIllustation from \"../assets/bookIllustation.svg\";\r\n\r\nconst SignUp = ({ signup, isAuthenticated }) => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n    if (accountCreated)\r\n        return <Redirect to='/signin' />;\r\n\r\n    return (\r\n        <Grid templateColumns=\"repeat(7, 1fr)\" h=\"calc(100vh - 80px)\" >\r\n            <Flex gridColumn=\"span 3\" bg=\"#263772\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Image boxSize=\"450px\" src={bookIllustation} alt=\"bookIllustation\"/>\r\n            </Flex>\r\n            <Flex gridColumn=\"span 4\" bg=\"#FBFBFB\">\r\n                <Flex minHeight='calc(100vh - 80px)' width='full' align='center' justifyContent='center'>\r\n                    <Box \r\n                        borderWidth={1}\r\n                        px={4}\r\n                        width='full'\r\n                        maxWidth='500px'\r\n                        borderRadius={4}\r\n                        textAlign='center'\r\n                        boxShadow='md'\r\n                        bg=\"white\"\r\n                    >\r\n                        <Box p={4}>\r\n                        <Formik \r\n                            initialValues={{ name: '', email: '', password: '', re_password: '' }}\r\n                            onSubmit={e => {console.log(e); \r\n                                const { name, email, password, re_password } = e;\r\n                                signup({ name, email, password, re_password });\r\n                                setAccountCreated(true);\r\n                            }}\r\n                            validate={values => {\r\n                                const errors = {};\r\n\r\n                                if (values.password !== values.re_password){\r\n                                    errors.re_password = 'Fjalkalimet nuk jan te njejta.'\r\n                                }\r\n\r\n                                if(values.password.length < 8){\r\n                                    errors.password = 'Fjalkalimi duhet te ket te pakten 10 karaktere.'\r\n                                }\r\n\r\n                                return errors;\r\n                            }}\r\n                            >\r\n                            {() => (\r\n                                <Form method=\"POST\">\r\n                                    <Flex my={8} textAlign='left' flexDir=\"column\">\r\n                                        <Heading mb={8} fontSize={40} fontWeight=\"500\">Regjistrohu</Heading>\r\n                                        <Field name=\"name\">\r\n                                            {({field, form}) => (\r\n                                                <FormControl isRequired>\r\n                                                    <FormLabel>Emri</FormLabel>\r\n                                                    <Input {...field} id=\"name\" type='text' placeholder='Vendosni usernamin tuaj'/>\r\n                                                    <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                                                </FormControl>\r\n                                            )}\r\n                                        </Field>\r\n                                        \r\n                                        <Field name=\"email\">\r\n                                            {({field, form}) => (\r\n                                                <FormControl mt={4} isRequired>\r\n                                                    <FormLabel>Email</FormLabel>\r\n                                                    <Input {...field} id=\"email\" type='email' placeholder='Vendosni adresen tuaj te emailit'/>\r\n                                                    <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                                                </FormControl>\r\n                                            )}\r\n                                        </Field>\r\n\r\n                                        <Field name=\"password\">\r\n                                            {({field, form}) => (\r\n                                                <FormControl mt={4} isInvalid={form.errors.password && form.touched.password} isRequired>\r\n                                                    <FormLabel>Fjalkalimi</FormLabel>\r\n                                                    <Input {...field} id=\"password\" type='password' placeholder='Vendosni fjalkalimin tuaj' />\r\n                                                    <FormErrorMessage>{form.errors.password}</FormErrorMessage>\r\n                                                </FormControl>\r\n                                            )}\r\n                                        </Field>\r\n\r\n                                        <Field name=\"re_password\">\r\n                                            {({field, form}) => (\r\n                                                <FormControl mt={4} isInvalid={form.errors.re_password && form.touched.re_password} isRequired>\r\n                                                    <FormLabel>Konfirmoni fjalkalimin</FormLabel>\r\n                                                    <Input {...field} id=\"re_password\" type='password' placeholder='Konfirmoni fjalkalimin tuaj' />\r\n                                                    <FormErrorMessage>{form.errors.re_password}</FormErrorMessage>\r\n                                                </FormControl>\r\n                                            )}\r\n                                        </Field>\r\n\r\n                                        <Button onClick={onOpen} my={6} colorScheme=\"blue\" variant=\"link\" w=\"inherit\">\r\n                                            <Text fontSize={14} isTruncated w=\"500px\">Duke u regjistruar ju pranoni Kushtet e Shërbimit, Politikat e Privatësisë dhe Politikat e Përdorimit.</Text>\r\n                                        </Button>\r\n            \r\n                                        <Modal isOpen={isOpen} onClose={onClose} scrollBehavior={'inside'}>\r\n                                            <ModalOverlay />\r\n                                            <ModalContent>\r\n                                            <ModalHeader>Modal Title</ModalHeader>\r\n                                            <ModalCloseButton />\r\n                                            <ModalBody>\r\n                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque sollicitudin velit eget leo malesuada, eu tempor mi rutrum. Ut a ante in mi venenatis convallis a auctor turpis. Donec sed imperdiet ligula. Aenean hendrerit orci quis egestas sagittis. Nam pulvinar felis lacus, lobortis bibendum augue interdum a. Mauris mollis, purus sed euismod tincidunt, urna mi efficitur quam, eget ultricies enim lectus sed massa. Sed urna nulla, bibendum quis metus eu, auctor auctor nibh. Sed id feugiat ante. Aenean ultricies lorem enim, sagittis pellentesque lectus cursus vitae. Etiam vel diam purus. Maecenas aliquet non nisl non feugiat. Etiam ornare eget arcu ac eleifend. Vestibulum a ipsum eu quam iaculis feugiat sagittis non neque.\r\n                                                Quisque ut posuere nulla, non pretium nunc. Ut imperdiet a felis sed viverra. Phasellus nec neque sed risus rhoncus varius sit amet at lectus. Nam non pretium lacus, id consequat nisi. Quisque imperdiet, lorem sit amet iaculis pulvinar, libero lectus placerat ligula, in tempus justo sem vitae nisi. Quisque suscipit nisi ante, ac pharetra nunc condimentum ac. Donec sit amet orci sit amet metus ullamcorper vulputate eget a magna. Proin sodales pellentesque mauris, eget malesuada tortor accumsan ac. Praesent consequat magna id neque mollis, in tempor tellus mollis. Donec at rutrum velit, vel porta justo. Praesent est sem, fringilla eget dolor ac, condimentum egestas tellus. Cras et malesuada enim. Curabitur finibus feugiat quam, vitae interdum nulla hendrerit vel. Morbi et convallis elit.\r\n                                            </ModalBody>\r\n                                    \r\n                                            <ModalFooter>\r\n                                                <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n                                                Close\r\n                                                </Button>\r\n                                            </ModalFooter>\r\n                                            </ModalContent>\r\n                                        </Modal>\r\n\r\n                                        <Button type='submit' colorScheme=\"blue\" variant=\"solid\" width='full' >Regjistrohu</Button>\r\n                                        <Flex align=\"center\">\r\n                                            <Divider my={8}/>\r\n                                            <Text fontSize={16} color=\"gray.400\" mx={6}>ose</Text>\r\n                                            <Divider my={8}/>\r\n                                        </Flex>\r\n                                        <Link to=\"/signin\">\r\n                                            <Button colorScheme=\"blue\" variant=\"outline\" width='full' >Identifikohu</Button>\r\n                                        </Link>\r\n                                    </Flex>\r\n                                    {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                                    <pre>{JSON.stringify(errors, null, 2)}</pre> */}\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                        </Box>\r\n                    </Box>\r\n                </Flex>\r\n            </Flex>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup })(SignUp);\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\n\r\nimport { Grid,\r\n    Image,\r\n    Heading,\r\n    Button,\r\n    Input,\r\n    Flex,\r\n    FormControl,\r\n    Box,\r\n    FormLabel,\r\n    Divider,\r\n    Text,\r\n    useToast\r\n} from \"@chakra-ui/react\";\r\nimport bookIllustation from \"../assets/bookIllustation.svg\";\r\n\r\nconst ResetPassword = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const toast = useToast();\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => {\r\n        setFormData({ ...formData, [e.target.id]: e.target.value });\r\n        console.log(e.target.id);\r\n        console.log(e.target.value);\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        props.reset_password(email);\r\n\r\n        toast({\r\n            title: \"Kerkesa u dergua.\",\r\n            description: \"Kontrolloni emailin per instruksionet se si te riktheni fjalkalimin tuaj.\",\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n        });\r\n\r\n        console.log(\"Request sent\");\r\n\r\n        setTimeout(() => {\r\n            setRequestSent(true);\r\n        }, 5000);\r\n        \r\n    };\r\n\r\n    if (requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <Grid templateColumns=\"repeat(7, 1fr)\" h=\"calc(100vh - 80px)\" >\r\n        <Flex gridColumn=\"span 3\" bg=\"#263772\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Image boxSize=\"450px\" src={bookIllustation} alt=\"bookIllustation\"/>\r\n        </Flex>\r\n        <Flex gridColumn=\"span 4\" bg=\"#FBFBFB\">\r\n            <Flex minHeight='calc(100vh - 80px)' width='full' align='center' justifyContent='center'>\r\n                <Box \r\n                    borderWidth={1}\r\n                    px={4}\r\n                    width='full'\r\n                    maxWidth='500px'\r\n                    borderRadius={4}\r\n                    textAlign='center'\r\n                    boxShadow='md'\r\n                    bg=\"white\"\r\n                >\r\n                    <Box p={4}>\r\n                        <form method=\"POST\" onSubmit={e => onSubmit(e)}>\r\n                            <Flex my={8} textAlign='left' flexDir=\"column\">\r\n                                <FormControl isRequired>\r\n                                    <Heading mb={8} fontSize={40} fontWeight=\"500\">Rikthe Fjalkalimin</Heading>\r\n                                    <FormLabel>Email</FormLabel>\r\n                                    <Input isRequired \r\n                                    onChange={e => onChange(e)}\r\n                                    id='email' \r\n                                    type='email' \r\n                                    placeholder='Vendosni adresen tuaj te emailit'/>\r\n                                </FormControl>\r\n\r\n                                <Button type='submit' mt={8} colorScheme=\"blue\" variant=\"solid\" width='full'>Rikthe Fjalkalimin</Button>\r\n                                <Flex align=\"center\">\r\n                                    <Divider my={8}/>\r\n                                    <Text fontSize={16} color=\"gray.400\" mx={6}>ose</Text>\r\n                                    <Divider my={8}/>\r\n                                </Flex>\r\n                                <Link to=\"/signin\">\r\n                                    <Button colorScheme=\"blue\" variant=\"outline\" width='full'>Identifikohu</Button>\r\n                                </Link>\r\n                            </Flex>\r\n                        </form>\r\n                    </Box>\r\n                </Box>\r\n            </Flex>\r\n        </Flex>\r\n    </Grid>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\n\r\nimport {\r\n    Formik,\r\n    Field,\r\n    Form\r\n  } from \"formik\";\r\n\r\nimport { Grid,\r\n    Image,\r\n    Heading,\r\n    Button,\r\n    Input,\r\n    Flex,\r\n    FormControl,\r\n    Box,\r\n    FormLabel,\r\n    Divider,\r\n    Text,\r\n    FormErrorMessage\r\n} from \"@chakra-ui/react\";\r\nimport bookIllustation from \"../assets/bookIllustation.svg\";\r\n\r\nconst ResetPasswordConfirm = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/signin' />\r\n    return (\r\n                <Grid templateColumns=\"repeat(7, 1fr)\" h=\"calc(100vh - 80px)\" >\r\n                <Flex gridColumn=\"span 3\" bg=\"#263772\" alignItems=\"center\" justifyContent=\"center\">\r\n                    <Image boxSize=\"450px\" src={bookIllustation} alt=\"bookIllustation\"/>\r\n                </Flex>\r\n                <Flex gridColumn=\"span 4\" bg=\"#FBFBFB\">\r\n                    <Flex minHeight='calc(100vh - 80px)' width='full' align='center' justifyContent='center'>\r\n                        <Box \r\n                            borderWidth={1}\r\n                            px={4}\r\n                            width='full'\r\n                            maxWidth='500px'\r\n                            borderRadius={4}\r\n                            textAlign='center'\r\n                            boxShadow='md'\r\n                            bg=\"white\"\r\n                        >\r\n                            <Box p={4}>\r\n                                <Formik \r\n                                    initialValues={{ new_password: '', re_new_password: '' }}\r\n                                    onSubmit={e => {console.log(e); \r\n                                        const { new_password, re_new_password } = e;\r\n\r\n                                        const uid = props.match.params.uid;\r\n                                        const token = props.match.params.token;\r\n\r\n                                        props.reset_password_confirm(uid, token, new_password, re_new_password);\r\n                                        setTimeout(() => {\r\n                                            setRequestSent(true);\r\n                                        }, 5000);\r\n                                    }}\r\n                                    validate={values => {\r\n                                        const errors = {};\r\n\r\n                                        if(values.new_password.length < 8){\r\n                                            errors.new_password = 'Fjalkalimi duhet te ket te pakten 10 karaktere.'\r\n                                        }\r\n\r\n                                        if (values.new_password !== values.re_new_password){\r\n                                            errors.re_new_password = 'Fjalkalimet nuk jan te njejta.'\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    >\r\n                                    {() => (\r\n                                        <Form method=\"POST\">\r\n                                            <Flex my={8} textAlign='left' flexDir=\"column\">\r\n                                                <Heading mb={8} fontSize={40} fontWeight=\"500\">Rikthe Fjalkalimin</Heading>\r\n\r\n                                                <Field name=\"new_password\">\r\n                                                    {({field, form}) => (\r\n                                                        <FormControl mt={4} isInvalid={form.errors.new_password && form.touched.new_password} isRequired>\r\n                                                            <FormLabel>Fjalkalimi</FormLabel>\r\n                                                            <Input {...field} id=\"new_password\" type='password' placeholder='Vendosni fjalkalimin tuaj' />\r\n                                                            <FormErrorMessage>{form.errors.new_password}</FormErrorMessage>\r\n                                                        </FormControl>\r\n                                                    )}\r\n                                                </Field>\r\n\r\n                                                <Field name=\"re_new_password\">\r\n                                                    {({field, form}) => (\r\n                                                        <FormControl mt={4} isInvalid={form.errors.re_new_password && form.touched.re_new_password} isRequired>\r\n                                                            <FormLabel>Konfirmoni fjalkalimin</FormLabel>\r\n                                                            <Input {...field} id=\"re_new_password\" type='password' placeholder='Konfirmoni fjalkalimin tuaj' />\r\n                                                            <FormErrorMessage>{form.errors.re_new_password}</FormErrorMessage>\r\n                                                        </FormControl>\r\n                                                    )}\r\n                                                </Field>\r\n\r\n                                                <Button type='submit' mt={8} colorScheme=\"blue\" variant=\"solid\" width='full'>Konfirmoni ndryshimin</Button>\r\n                                                <Flex align=\"center\">\r\n                                                    <Divider my={8}/>\r\n                                                    <Text fontSize={16} color=\"gray.400\" mx={6}>ose</Text>\r\n                                                    <Divider my={8}/>\r\n                                                </Flex>\r\n                                                <Link to=\"/signin\">\r\n                                                    <Button colorScheme=\"blue\" variant=\"outline\" width='full'>Identifikohu</Button>\r\n                                                </Link>\r\n                                            </Flex>\r\n                                            {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                                            <pre>{JSON.stringify(errors, null, 2)}</pre> */}\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik>\r\n                            </Box>\r\n                        </Box>\r\n                    </Flex>\r\n                </Flex>\r\n            </Grid>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","import {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    SIGNIN_SUCCESS,\r\n    SIGNIN_FAIL,\r\n    LOGOUT,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case SIGNIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case SIGNUP_FAIL:\r\n        case SIGNIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Heading,\r\n    InputGroup,\r\n    InputLeftElement,\r\n    Button,\r\n    Input,\r\n    Flex\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBM = () => {\r\n    return (\r\n        <Flex bg=\"white\" pos=\"sticky\" top=\"0\" zIndex=\"sticky\" borderBottom=\"1px solid #E0E0E0\" w=\"full\" h=\"20\" justify=\"space-around\" align=\"center\">\r\n            <Heading>BMPlace</Heading>\r\n            <Flex w=\"35%\">\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<SearchIcon color=\"gray.400\" />}\r\n                    />\r\n                    <Input placeholder=\"Kerko\" mr={3} />\r\n                </InputGroup>\r\n                <Button colorScheme=\"blue\" variant=\"outline\">Kerko</Button>\r\n            </Flex>\r\n            <Link to=\"/signin\">\r\n                <Button colorScheme=\"blue\" variant=\"solid\">\r\n                + Krijo nje njoftim\r\n                </Button>\r\n            </Link>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default NavBM;\r\n","import React, { useEffect } from 'react';\r\nimport Navbar from '../components/Nav/NavBM';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect( props => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await props.checkAuthenticated();\r\n                await props.load_user();\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\r\n","import React from 'react';\nimport Home from './screens/Home';\nimport SignIn from './screens/SignIn';\nimport SignUp from './screens/SignUp';\nimport ResetPassword from './screens/ResetPassword';\nimport ResetPasswordConfirm from './screens/ResetPasswordConfirm';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from './hocs/Layout';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/signin\" component={SignIn}/>\n            <Route exact path=\"/signup\" component={SignUp}/>\n            <Route exact path=\"/resetpassword\" component={ResetPassword}/>\n            <Route exact path=\"/resetpassword/confirm/:uid/:token\" component={ResetPasswordConfirm}/>\n            <Route exact path='*'>\n              <h1>404 Not Found</h1>\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}